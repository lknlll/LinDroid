apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion build_versions.target_sdk
    //添加DataBinding支持, 要求Android Studio 3.0以上
    dataBinding{
        enabled = true
    }

    viewBinding{
        enabled = true
    }

    //添加Java 8 支持
    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.example.lindroidcode"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-21'
            }
        }
        ndk {
            abiFilters 'armeabi','armeabi-v7a','arm64-v8a'
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String","BUILD_ENV","\"release\""
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String","BUILD_ENV","\"debug\""
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}
greendao {
    schemaVersion 1 //指定数据库schema版本号，迁移等操作会用到
    daoPackage 'com.example.lindroidcode.greendaoatoz.entity' //通过gradle插件生成的数据库相关文件的包名，默认为你的entity所在的包名；
    targetGenDir 'src/main/java' //自定义生成数据库文件的目录，可以将生成的文件放到我们的java目录中，而不是build中，这样就不用额外的设置资源目录了
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':lib_base_recycler_helper')
    implementation project(':lib_matisse')
    implementation project(':lib_glide')
    implementation project(':lib_gradle_sample')

    //LiveData, ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    //retrofit，基于OKHttp，依赖android.permission.INTERNET
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    //Matisse
    implementation 'com.squareup.picasso:picasso:2.5.2'
    //Glide
    implementation glide_maven.api

    implementation appcompat_maven.api
    implementation constraintlayout_maven.api
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation recyclerview_maven.api
    implementation 'com.google.android.material:material:1.5.0-alpha02'//FloatingActionButton, Snackbar
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation 'com.blankj:utilcode:1.22.10@aar'//Todo source
    implementation 'org.greenrobot:greendao:3.2.2'

    implementation 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    implementation 'com.google.guava:guava:24.1-jre'

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation okhttp_maven.api
    implementation 'com.squareup.okhttp3:mockwebserver:3.8.1'//MockWebServer是square出品的跟随OkHttp一起发布，用来Mock测试服务器行为的库。在单元测试中专门用来测试http请求

    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
}
